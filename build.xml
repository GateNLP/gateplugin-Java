<project name="Java" basedir="." default="all">

  <!-- the properties file has highest priority -->
  <property file="build.properties" />

  <!-- Name of the plugin -->
  <property name="plugin.name" value="Java"/>

  <!-- get environment variables -->
  <!-- environment variables are used if not already set in
       the properties file
  -->
  <property environment="env"/>
  <property name="gate.home" location="${env.GATE_HOME}" />
  

  <!-- if not set in build.properties or the environment variables,
       fall back ... -->
  <property name="gate.home" location="../.." />

  <!-- location of GATE lib directory - should be inferred from gate.home -->
  <property name="gate.lib" location="${gate.home}/lib" />

  <!-- location of gate.jar - should be inferred from gate.home -->
  <property name="gate.jar" location="${gate.home}/bin/gate.jar" />

  <!-- Source directory - contains the source files for this plugin -->
  <property name="src.dir" location="src" />

  <!-- directory to contain the compiled classes -->
  <property name="classes.dir" location="classes" />

  <!-- documentation directory -->
  <property name="doc.dir" location="doc" />

  <!-- JavaDoc documentation directory -->
  <property name="javadoc.dir" location="${doc.dir}/javadoc" />

  <!-- lib directory - put any additional JAR files your plugin requires into
       this directory.  You will also need to add them as <JAR> entries in
       creole.xml -->
  <property name="lib.dir" location="lib" />

  <!-- location for the generated JAR file -->
  <property name="jar.location" location="${plugin.name}.jar" />

  <path id="javacompile.classpath">
    <pathelement location="${gate.jar}" />
    <pathelement location="${classes.dir}" />
    <fileset dir="${gate.lib}">
      <include name="**/*.jar" />
    </fileset>
    <fileset dir="${lib.dir}" includes="**/*.jar" />
  </path>

  <!--====================== Targets ============================-->
 
  <!-- create build directory structure -->
  <target name="prepare">
    <mkdir dir="${classes.dir}" />
  </target>

  <!-- compile the java sources -->
  <target name="java-only-compile" depends="prepare" >
    <javac classpathref="javacompile.classpath"
           srcdir="${src.dir}"
           destdir="${classes.dir}"
           debug="true"
           debuglevel="lines,source"
           target="1.6"
           source="1.6" />
  </target>

  <target name="java-compile" depends="java-only-compile"/>

  <!-- copy resources (anything non-.java) from src to classes -->
  <target name="copy.resources" depends="prepare">
    <copy todir="${classes.dir}">
      <fileset dir="${src.dir}" excludes="**/*.java" />
    </copy>
  </target>

  <!-- create the JAR file -->
  <target name="jar-only-java" depends="java-only-compile" >
    <jar destfile="${jar.location}"
         update="false"
         basedir="${classes.dir}" />
  </target>

  <target name="jar" depends="java-compile, copy.resources, jar-only-java"/>

  <!-- remove the generated .class files -->
  <target name="clean.classes" >
    <delete dir="${classes.dir}" />
  </target>

  <!-- clean resources generated by tests -->
  <target name="clean.tests">
    <delete>
      <fileset dir="." includes="TEST*.xml" />
    </delete>
  </target>

  <!-- Clean up - remove .class and .jar files -->
  <target name="clean" depends="clean.classes, clean.tests" >
    <delete file="${jar.location}" />
  </target>

  <!-- Clean up everything, including Javadoc -->
  <target name="docclean" depends="clean, clean.javadoc" >
  </target>

  <!-- Build JavaDoc documentation -->
  <target name="doc.prepare">
    <mkdir dir="${javadoc.dir}" />
  </target>

  <!-- Clean JavaDoc documentation -->
  <target name="clean.javadoc">
    <delete dir="${javadoc.dir}" />
  </target>

  <!-- TODO! -->
  <target name="java-tests" depends="jar"/>
  
  
  <target name="doc" depends="javadoc" />

  <target name="javadoc" depends="doc.prepare">
    <javadoc destdir="${javadoc.dir}" packagenames="*"
             classpathref="compile.classpath"
             encoding="UTF-8"
             windowtitle="${plugin.name} JavaDoc"
             source="1.5">
      <sourcepath>
        <pathelement location="${src.dir}" />
      </sourcepath>
      <link href="http://java.sun.com/j2se/1.5.0/docs/api/" />
      <link href="http://hudson.gate.ac.uk/job/GATE-Nightly/javadoc/"/>
    </javadoc>
  </target>
  
  <!-- Build everything - the code and JavaDoc -->
  <target name="all" depends="jar" />

  <!-- Other targets used by the main GATE build file:
         build: build the plugin - just calls "jar" target
         test : run the unit tests
         distro.prepare: remove intermediate files that shouldn't be in the
                         distribution
  -->
  <target name="build" depends="jar" />
  <target name="test" depends="java-tests" />
  <target name="distro.prepare" depends="clean.classes, clean.tests" />


</project>
